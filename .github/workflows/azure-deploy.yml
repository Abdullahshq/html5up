name: Deploy to Azure Web App with PHP

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      webapp_name:
        description: 'Azure Web App to deploy to'
        required: true
        type: choice
        options:
          - default
          - secondary
        default: 'default'
      deployment_slot:
        description: 'Deployment slot'
        required: false
        type: string
        default: 'production'

jobs:
  # Stage 1: Checkout Code
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  # Stage 2: Prepare Environment
  prepare:
    name: Prepare Environment
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, intl, gd, xml, zip

  # Stage 3: Deploy to Azure
  deploy:
    name: Deploy to Azure
    needs: prepare
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.deployment_slot || 'production' }}
    # Environment protection rules will require approval before deployment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.webapp_name == 'secondary' && secrets.AZURE_WEBAPP_NAME_SECONDARY || secrets.AZURE_WEBAPP_NAME }}
          package: .
          slot-name: ${{ github.event.inputs.deployment_slot }}
          startup-command: "php -S 0.0.0.0:8080"
      # Set the webapp URL as an output variable and display deployment URL
      - name: Set and display webapp URL
        id: set-url
        run: |
          # Using the newer GitHub Actions output syntax
          # Determine which webapp name to use based on the input
          if [[ "${{ github.event.inputs.webapp_name }}" == "secondary" ]]; then
            WEBAPP_NAME="${{ secrets.AZURE_WEBAPP_NAME_SECONDARY }}"
          else
            WEBAPP_NAME="${{ secrets.AZURE_WEBAPP_NAME }}"
          fi
          
          # Determine the URL based on the deployment slot
          if [[ "${{ github.event.inputs.deployment_slot }}" == "production" ]]; then
            WEBAPP_URL="https://${WEBAPP_NAME}.azurewebsites.net"
          else
            WEBAPP_URL="https://${WEBAPP_NAME}-${{ github.event.inputs.deployment_slot }}.azurewebsites.net"
          fi
          
          echo "webapp-url=$WEBAPP_URL" >> $GITHUB_OUTPUT
          echo "::notice::Deployed to: $WEBAPP_URL (Web App: ${WEBAPP_NAME}, Slot: ${{ github.event.inputs.deployment_slot }})"